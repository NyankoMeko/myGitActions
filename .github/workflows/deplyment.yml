name: CI/CD Pipeline for File Management System

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Build Docker Image
        run: |
          docker build -t file-mgmt-system:${{ github.sha }} .

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Run Unit Tests
        run: |
          docker run --rm file-mgmt-system:${{ github.sha }} npm test

      - name: Run Security Scans
        run: |
          docker run --rm file-mgmt-system:${{ github.sha }} npm audit

  lint:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Run Super Linter
        uses: github/super-linter@v5
        env:
          VALIDATE_ALL_CODEBASE: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-staging:
    needs: [test, lint]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Docker Image
        run: |
          docker tag file-mgmt-system:${{ github.sha }} nyanomeko/file-mgmt-system:staging
          docker push nyanomeko/file-mgmt-system:staging

      - name: Deploy to Staging Server
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.STAGING_SERVER_HOST }}
          username: ${{ secrets.STAGING_SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker pull nyanomeko/file-mgmt-system:staging
            docker stop file-mgmt || true
            docker rm file-mgmt || true
            docker run -d --name file-mgmt -p 8080:8080 nyanomeko/file-mgmt-system:staging

  deploy-production:
    needs: deploy-staging
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Docker Image
        run: |
          docker tag file-mgmt-system:${{ github.sha }} nyanomeko/file-mgmt-system:latest
          docker push nyanomeko/file-mgmt-system:latest

      - name: Deploy to Production Server
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.PRODUCTION_SERVER_HOST }}
          username: ${{ secrets.PRODUCTION_SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker pull nyanomeko/file-mgmt-system:latest
            docker stop file-mgmt || true
            docker rm file-mgmt || true
            docker run -d --name file-mgmt -p 80:8080 nyanomeko/file-mgmt-system:latest
